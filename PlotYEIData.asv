clear all; close; clc;
%% Read Raw Data
DataFile = '../../Data/DataStats.csv'; 
fid = fopen(DataFile);
RawData = textscan( fid, '%s%f%f%f%f%f%f', 'headerlines', 1, 'delimiter', ','); 
fclose( fid ); 

Data.Filename = RawData{1}; 
Data.MaxXGyro = RawData{2}; 
Data.MaxYGyro = RawData{3}; 
Data.MaxZGyro = RawData{4}; 
Data.PrincipalXFrequency = RawData{5}; 
Data.PrincipalYFrequency = RawData{6}; 
Data.PrincipalZFrequency = RawData{7}; 

Indices = 1:length(Data.Filename); 

SortDataByTrial; % define where to find data

%% Prepare data for plotting
AllFrequencyData = vertcat(Data.PrincipalXFrequency(RunConcreteShoesIndices), ...
    Data.PrincipalZFrequency(RunConcreteShoesIndices ),...
    Data.PrincipalYFrequency( RunConcreteShoesIndices ), ...
    Data.PrincipalXFrequency(RunInPlaceIndices) , ...
    Data.PrincipalZFrequency(RunInPlaceIndices ), ...
    Data.PrincipalYFrequency( RunInPlaceIndices ), ...
    Data.PrincipalXFrequency(RunGrassShoesIndices) , ...
    Data.PrincipalZFrequency(RunGrassShoesIndices ), ...
    Data.PrincipalYFrequency( RunGrassShoesIndices ) ); 

AllGyroData = vertcat(Data.MaxXGyro(RunConcreteShoesIndices), ...
    Data.MaxZGyro(RunConcreteShoesIndices ),...
    Data.MaxYGyro( RunConcreteShoesIndices ), ...
    Data.MaxXGyro(RunInPlaceIndices) , ...
    Data.MaxZGyro(RunInPlaceIndices ), ...
    Data.MaxYGyro( RunInPlaceIndices ), ...
    Data.MaxXGyro(RunGrassShoesIndices) , ...
    Data.MaxZGyro(RunGrassShoesIndices ), ...
    Data.MaxYGyro( RunGrassShoesIndices ) ); 

%% Define grouping variables
GroupByTrial = cell(length(AllFrequencyData), 1 ); 
[GroupByTrial{1: ...
    (3*RunConcreteShoesLength)}] = deal('RunConcreteShoes'); 
[GroupByTrial{(3 * RunConcreteShoesLength + 1) :  ...
    (3 * RunConcreteShoesLength + 3 * RunInPlaceLength) } ] = ...
    deal('RunInPlace'); 
[GroupByTrial{ ( 3 * RunConcreteShoesLength + 3 * RunInPlaceLength + 1 ) : ...
  (3*RunConcreteShoesLength + 3*RunInPlaceLength + 3*RunGrassShoesLength)}] = ...
    deal('RunGrassShoes'); 

LengthTrialOne = length(Data.PrincipalXFrequency(RunConcreteShoesIndices)); 
LengthTrialTwo = length(Data.PrincipalXFrequency(RunInPlaceIndices) ); 
LengthTrialThree = length(Data.PrincipalXFrequency(RunGrassShoesIndices)); 

[GroupByChannel{1:LengthTrialOne}] = deal('Roll'); 
[GroupByChannel{(LengthTrialOne+1):(2 * LengthTrialOne) }] = deal('Pitch'); 
[GroupByChannel{(LengthTrialOne * 2 + 1):(3 * LengthTrialOne) }] = deal('Yaw'); 
[GroupByChannel{(3 * LengthTrialOne + 1) : ...
    (3 * LengthTrialOne + LengthTrialTwo) } ] = deal('Roll'); 
[GroupByChannel{ (3 * LengthTrialOne + LengthTrialTwo + 1) : ...
    ( 3 * LengthTrialOne + 2 * LengthTrialTwo) }] = deal('Pitch'); 
[GroupByChannel{ ( 3 * LengthTrialOne + 2 * LengthTrialTwo + 1) : ...
    ( 3 * LengthTrialOne + 3 * LengthTrialTwo) }] = deal('Yaw'); 
[GroupByChannel{ ( 3 * LengthTrialOne + 3 * LengthTrialTwo + 1) : ...
    ( 3 * LengthTrialOne + 3 * LengthTrialTwo + LengthTrialThree ) } ] = ...
    deal('Roll'); 
[GroupByChannel{ (3*LengthTrialOne + ...
    3*LengthTrialTwo + LengthTrialThree + 1) : ...
    (3*LengthTrialOne + 3*LengthTrialTwo + 2*LengthTrialThree) } ] = ...
    deal('Pitch'); 
[GroupByChannel{ ( 3*LengthTrialOne + 3*LengthTrialTwo + ...
    2*LengthTrialThree + 1) : ...
    (3*LengthTrialOne + 3*LengthTrialTwo + 3*LengthTrialThree) } ] = ...
    deal('Yaw');
    
    

G = cell(1:length(GroupByTrial), 2); 
G{1:end, 2} = GroupByTrial; 
G{1:end, 1} = GroupByChannel; 

%% Plot
screen_size = get(0, 'ScreenSize');
figure(1); 
boxplot(AllFrequencyData, G, 'colorgroup', GroupByChannel)
title('Principal Frequency'); ylabel('Frequency (Hz)');
set(gcf,'PaperUnits','inches','PaperPosition',[0 0 14 7])
print(gcf, '-dpng', '-r150', '../../Figures/BoxplotPeakFreqs.png')
figure(2); 
boxplot(AllGyroData, G, 'colorgroup', GroupByChannel)
title('Maximum Velocities'); ylabel('Velocity (deg/s)'); 
set(gcf,'PaperUnits','inches','PaperPosition',[0 0 14 7])
print(gcf, '-dpng', '-r150', '../../Figures/BoxplotPeakVelocities.png')


